import { ProgrammaticScryptoSborValue } from '@radixdlt/babylon-gateway-api-sdk';
import { Result } from 'neverthrow';
export declare class SborError extends Error {
    readonly path: string[];
    constructor(message: string, path?: string[]);
}
export declare const kinds: [
    'Bool',
    'I8',
    'I16',
    'I32',
    'I64',
    'I128',
    'U8',
    'U16',
    'U32',
    'U64',
    'U128',
    'String',
    'Enum',
    'Array',
    'Bytes',
    'Map',
    'Tuple',
    'Reference',
    'Own',
    'Decimal',
    'PreciseDecimal',
    'NonFungibleLocalId'
];
export type SborKind = ProgrammaticScryptoSborValue['kind'];
export declare abstract class SborSchema<T> {
    readonly kinds: SborKind[];
    constructor(kinds: SborKind[]);
    abstract validate(value: ProgrammaticScryptoSborValue, path: string[]): boolean;
    abstract parse(value: ProgrammaticScryptoSborValue, path: string[]): T;
    safeParse(value: ProgrammaticScryptoSborValue): Result<T, SborError>;
}
