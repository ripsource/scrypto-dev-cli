"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SborSchema = exports.kinds = exports.SborError = void 0;
const neverthrow_1 = require("neverthrow");
// Schema and parsing errors
class SborError extends Error {
    path;
    constructor(message, path = []) {
        super(message);
        this.path = path;
    }
}
exports.SborError = SborError;
exports.kinds = [
    'Bool',
    'I8',
    'I16',
    'I32',
    'I64',
    'I128',
    'U8',
    'U16',
    'U32',
    'U64',
    'U128',
    'String',
    'Enum',
    'Array',
    'Bytes',
    'Map',
    'Tuple',
    'Reference',
    'Own',
    'Decimal',
    'PreciseDecimal',
    'NonFungibleLocalId',
];
// Base schema class
class SborSchema {
    kinds;
    constructor(kinds) {
        this.kinds = kinds;
    }
    safeParse(value) {
        try {
            const data = this.parse(value, []);
            return (0, neverthrow_1.ok)(data);
        }
        catch (error) {
            if (error instanceof SborError) {
                return (0, neverthrow_1.err)(error);
            }
            throw error;
        }
    }
}
exports.SborSchema = SborSchema;
