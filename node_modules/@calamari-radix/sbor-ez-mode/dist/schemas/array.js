"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ArraySchema = void 0;
const sborSchema_1 = require("../sborSchema");
class ArraySchema extends sborSchema_1.SborSchema {
    itemSchema;
    constructor(itemSchema) {
        super(['Array']);
        this.itemSchema = itemSchema;
    }
    validate(value, path) {
        if (!value ||
            typeof value !== 'object' ||
            !('kind' in value) ||
            value.kind !== 'Array') {
            throw new sborSchema_1.SborError('Invalid array structure', path);
        }
        const arrayValue = value;
        const items = arrayValue.elements;
        return items.every((item, index) => {
            return this.itemSchema.validate(item, [...path, index.toString()]);
        });
    }
    parse(value, path) {
        this.validate(value, path);
        const arrayValue = value;
        const items = arrayValue.elements;
        return items.map((item, index) => this.itemSchema.parse(item, [...path, index.toString()]));
    }
}
exports.ArraySchema = ArraySchema;
