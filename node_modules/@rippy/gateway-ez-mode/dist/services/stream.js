"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.StreamService = void 0;
const transactionStream_1 = require("../stream/transactionStream");
class StreamService {
    gateway;
    constructor(gateway) {
        this.gateway = gateway;
    }
    /**
     *
     * @param startStateVersion The state version to start streaming from.
     * @param batchSize The maximum number of transactions to fetch per call.
     * @param opt_ins Optional settings for what data to include in transaction responses.
     * @param affected_entities Optional list of entities to filter transactions by.
     * @returns A promise that resolves with a TransactionStream class instance.
     * @throws {GatewayError} If an error occurs while fetching data from the Radix Gateway API
     */
    async getTransactionStream({ startStateVersion, batchSize, opt_ins, affected_entities, }) {
        return transactionStream_1.TransactionStream.create({
            gateway: this.gateway,
            startStateVersion,
            batchSize,
            opt_ins,
            affected_entities,
        });
    }
}
exports.StreamService = StreamService;
